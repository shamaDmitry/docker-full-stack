name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - main # Trigger on push to main branch
  pull_request:
    branches:
      - main # Trigger on pull request to main branch

jobs:
  build:
    runs-on: ubuntu-latest # Runner for building the image

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Checks out the code from the repository

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 # Enable Docker Buildx for multi-platform builds

      - name: Cache Docker layers
        uses: actions/cache@v3 # Cache Docker layers for faster builds
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: List files in repository
        run: ls -l

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./frontend/Dockerfile.prod # Path to your Dockerfile
          push: true # Push to the registry after build
          # tags: ghcr.io/${{ github.repository_owner }}/docker-full-stack:latest # Define the tag format for GHCR
          tags: ghcr.io/shama/docker-full-stack:latest # Define the tag format for GHCR

      - name: Get npm install logs
        if: failure() # Only run this step if the previous step (build and push) fails
        run: |
          IMAGE_ID=$(docker images --filter "reference=ghcr.io/${{ github.repository_owner }}/docker-full-stack:latest" --format "{{.ID}}")
          docker cp $IMAGE_ID:/npm_install.log npm_install.log
          cat npm_install.log  # Print the logs to the workflow output

      - name: Deploy backend (optional step for remote deployment)
        run: |
          echo "Deploy backend here using SSH, AWS ECS, or another provider"
